<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0812.0353                               -->
<workbook original-version='18.1' source-build='2022.2.1 (20222.22.0812.0353)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Depreciation (Years)' datatype='integer' name='[Parameter 10]' param-domain-type='any' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
      </column>
      <column caption='Long-term Occupancy Rate' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.973'>
        <calculation class='tableau' formula='0.973' />
      </column>
      <column caption='Threshold to be Considered Profitable' datatype='integer' default-format='C1033%' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='6000'>
        <calculation class='tableau' formula='6000' />
      </column>
      <column caption='Capital Expenditure per Property' datatype='real' default-format='C1033%' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30000.0'>
        <calculation class='tableau' formula='30000.0' />
      </column>
      <column caption='Contracting Costs per Stay' datatype='real' default-format='C1033%' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='100.'>
        <calculation class='tableau' formula='100.' />
      </column>
      <column caption='Transaction Fee' datatype='real' default-format='p0.00%' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='0.3'>
        <calculation class='tableau' formula='0.3' />
      </column>
      <column caption='Average Rental Period(nights) ' datatype='integer' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='3'>
        <calculation class='tableau' formula='3' />
      </column>
      <column caption='Monthly Utilities ' datatype='real' default-format='C1033%' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='300.'>
        <calculation class='tableau' formula='300.' />
      </column>
      <column caption='Regulatory Fees' datatype='real' default-format='p0.00%' name='[Parameter 8]' param-domain-type='any' role='measure' type='quantitative' value='0.1'>
        <calculation class='tableau' formula='0.1' />
      </column>
      <column caption='Yearly Upkeep' datatype='real' default-format='C1033%' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='6000.'>
        <calculation class='tableau' formula='6000.' />
      </column>
    </datasource>
    <datasource caption='Watershed properties and comparable short-term rental info' inline='true' name='federated.1ear5ut0yhw1ya19345jh0uemtqr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Watershed properties and comparable short-term rental info' name='textscan.0piwk4l0m8fnan1glaq9j1xvj3el'>
            <connection class='textscan' directory='/Users/bling/Documents/21-22/data science/Coursera/Tableau/Watershed Cash Flow v Profits, Conversion Year &amp; After.twb Files/Data/SQL' filename='Watershed properties and comparable short-term rental info.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0piwk4l0m8fnan1glaq9j1xvj3el' name='Watershed properties and comparable short-term rental info.csv' table='[Watershed properties and comparable short-term rental info#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='ws_property_id' ordinal='0' />
            <column datatype='string' name='property_type' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='zipcode' ordinal='4' />
            <column datatype='string' name='apt_house' ordinal='5' />
            <column datatype='string' name='kitchen' ordinal='6' />
            <column datatype='integer' name='num_bedrooms' ordinal='7' />
            <column datatype='string' name='shared' ordinal='8' />
            <column datatype='integer' name='current_monthly_rent' ordinal='9' />
            <column datatype='integer' name='comp_st_10th_pctl_rent' ordinal='10' />
            <column datatype='integer' name='comp_st_90th_pctl_rent' ordinal='11' />
            <column datatype='integer' name='sample_nightly_rent_price' ordinal='12' />
            <column datatype='integer' name='occ_days_as_st' ordinal='13' />
            <column datatype='real' name='occ_rate_as_st' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0piwk4l0m8fnan1glaq9j1xvj3el' name='Watershed properties and comparable short-term rental info.csv' table='[Watershed properties and comparable short-term rental info#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='ws_property_id' ordinal='0' />
            <column datatype='string' name='property_type' ordinal='1' />
            <column datatype='string' name='city' ordinal='2' />
            <column datatype='string' name='state' ordinal='3' />
            <column datatype='integer' name='zipcode' ordinal='4' />
            <column datatype='string' name='apt_house' ordinal='5' />
            <column datatype='string' name='kitchen' ordinal='6' />
            <column datatype='integer' name='num_bedrooms' ordinal='7' />
            <column datatype='string' name='shared' ordinal='8' />
            <column datatype='integer' name='current_monthly_rent' ordinal='9' />
            <column datatype='integer' name='comp_st_10th_pctl_rent' ordinal='10' />
            <column datatype='integer' name='comp_st_90th_pctl_rent' ordinal='11' />
            <column datatype='integer' name='sample_nightly_rent_price' ordinal='12' />
            <column datatype='integer' name='occ_days_as_st' ordinal='13' />
            <column datatype='real' name='occ_rate_as_st' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ws_property_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ws_property_id]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>ws_property_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[property_type]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>property_type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zipcode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zipcode]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>zipcode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>apt_house</remote-name>
            <remote-type>129</remote-type>
            <local-name>[apt_house]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>apt_house</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kitchen</remote-name>
            <remote-type>129</remote-type>
            <local-name>[kitchen]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>kitchen</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>num_bedrooms</remote-name>
            <remote-type>20</remote-type>
            <local-name>[num_bedrooms]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>num_bedrooms</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>shared</remote-name>
            <remote-type>129</remote-type>
            <local-name>[shared]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>shared</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_monthly_rent</remote-name>
            <remote-type>20</remote-type>
            <local-name>[current_monthly_rent]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>current_monthly_rent</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comp_st_10th_pctl_rent</remote-name>
            <remote-type>20</remote-type>
            <local-name>[comp_st_10th_pctl_rent]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>comp_st_10th_pctl_rent</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>comp_st_90th_pctl_rent</remote-name>
            <remote-type>20</remote-type>
            <local-name>[comp_st_90th_pctl_rent]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>comp_st_90th_pctl_rent</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sample_nightly_rent_price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[sample_nightly_rent_price]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>sample_nightly_rent_price</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>occ_days_as_st</remote-name>
            <remote-type>20</remote-type>
            <local-name>[occ_days_as_st]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>occ_days_as_st</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>occ_rate_as_st</remote-name>
            <remote-type>5</remote-type>
            <local-name>[occ_rate_as_st]</local-name>
            <parent-name>[Watershed properties and comparable short-term rental info.csv]</parent-name>
            <remote-alias>occ_rate_as_st</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg by type and city' datatype='real' name='[Calculation_3395784501162274816]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [city],[property_type]: AVG([sample_nightly_rent_price])}' />
      </column>
      <column caption='Long-term Annual Rev (No Conversion) ' datatype='real' name='[Calculation_5550686556668563456]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[current_monthly_rent]*12*[Parameters].[Parameter 1]' />
      </column>
      <column caption='Sample Nightly Rent Percentile ' datatype='real' name='[Calculation_5550686556669468674]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([sample_nightly_rent_price]-&#10;[comp_st_10th_pctl_rent])*0.8/([comp_st_90th_pctl_rent]-[comp_st_10th_pctl_rent])+0.1' />
      </column>
      <column caption='Predicted Occupany Rate ' datatype='real' name='[Calculation_5550686556673208323]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-0.7917*[Calculation_5550686557657669645]+0.8507' />
      </column>
      <column caption='Optimal Rent' datatype='real' name='[Calculation_5550686556674646020]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(-0.7917*([comp_st_10th_pctl_rent]-([comp_st_90th_pctl_rent]&#10;-[comp_st_10th_pctl_rent])/8)/(1.25*([comp_st_90th_pctl_rent]&#10;-[comp_st_10th_pctl_rent]))-0.8507)*1.25*([comp_st_90th_pctl_rent]&#10;-[comp_st_10th_pctl_rent])/(2*(-0.7917))' />
      </column>
      <column caption='New Cash Out (Conversion Year)' datatype='real' name='[Calculation_5550686556676911109]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[Parameters].[Parameter 3]-[Parameters].[Parameter 7]*12-[Calculation_5550686557334196230]' />
      </column>
      <column caption='Variable Costs - Conversion Year &amp; After' datatype='real' name='[Calculation_5550686557334196230]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5550686556673208323]*(365/[Parameters].[Parameter 6])*[Parameters].[Parameter 4]' />
      </column>
      <column caption='New Cash Out (each year thereafter)' datatype='real' name='[Calculation_5550686557337161735]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[Parameters].[Parameter 7]*12 -[Calculation_5550686557334196230]-[Parameters].[Parameter 9]' />
      </column>
      <column caption='ST Annual Rev After Transaction Fees' datatype='real' name='[Calculation_5550686557337628680]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5550686557664280590]*[Calculation_5550686556673208323]*365*(1-[Parameters].[Parameter 5])' />
      </column>
      <column caption='Change in Cash Flow (Conversion Year)' datatype='real' name='[Calculation_5550686557338599433]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5550686556668563456]-[Calculation_5550686557337628680]+&#10;[Calculation_5550686556676911109]' />
      </column>
      <column caption='Change in Cash Flow (Each Year after) ' datatype='real' name='[Calculation_5550686557338841098]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5550686556668563456]-[Calculation_5550686557337628680]&#10;+[Calculation_5550686557337161735]' />
      </column>
      <column caption='New Change in Profits, Conversion Year' datatype='real' name='[Calculation_5550686557375729675]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[Parameters].[Parameter 3]/[Parameters].[Parameter 10]&#10;-[Parameters].[Parameter 7]*12-[Calculation_5550686557334196230]' />
      </column>
      <column caption='New Change in Profit (After Conversion)' datatype='real' name='[Calculation_5550686557376335884]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[Parameters].[Parameter 3]/[Parameters].[Parameter 10]&#10;-[Parameters].[Parameter 7]*12-[Calculation_5550686557334196230]&#10;-[Parameters].[Parameter 9]' />
      </column>
      <column caption='Correct Opt Rent Percentile ' datatype='real' name='[Calculation_5550686557657669645]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_5550686557664280590]-&#10;([comp_st_10th_pctl_rent]-([comp_st_90th_pctl_rent]&#10;-[comp_st_10th_pctl_rent])/8))/(1.25*([comp_st_90th_pctl_rent]-[comp_st_10th_pctl_rent]))' />
      </column>
      <column caption='Correct Opt Rent' datatype='real' name='[Calculation_5550686557664280590]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_5550686556674646020]&gt;[comp_st_10th_pctl_rent] THEN [Calculation_5550686556674646020]&#10;ELSE [comp_st_10th_pctl_rent] END' />
      </column>
      <column caption='Net Cash Flow Change Conversion Year' datatype='real' name='[Calculation_5550686557670608911]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5550686557337628680]-[Calculation_5550686556668563456]&#10;+[Calculation_5550686556676911109]' />
      </column>
      <column caption='Net Change In Cash Flow Each Year After Conversion ' datatype='real' name='[Calculation_5550686557672321040]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5550686557337628680]-[Calculation_5550686556668563456]&#10;+[Calculation_5550686557337161735]' />
      </column>
      <column caption='Net Change in Profits Conversion Year' datatype='real' name='[Calculation_5550686557674639377]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5550686557337628680]-[Calculation_5550686556668563456]&#10;+[Calculation_5550686557375729675]' />
      </column>
      <column caption='Net Change in Profits Each Year  After Conversion ' datatype='real' name='[Calculation_5550686557674790930]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5550686557337628680]-[Calculation_5550686556668563456]&#10;+[Calculation_5550686557376335884]' />
      </column>
      <column caption='Profitable (dynamic) ?' datatype='boolean' name='[Calculation_5550686561957187603]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_5550686557674790930]&gt;[Parameters].[Parameter 2]' />
      </column>
      <column caption='If Profitable, Net Change Profit (or)' datatype='real' name='[Calculation_5550686562595549216]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='If [Profitable (dynamic) ? (copy)_5550686562595119135]=TRUE&#10;THEN [Net Change in Profits Each Year  After Conversion  (copy)_5550686562591715355]&#10;END' />
      </column>
      <column caption='If Profitable, Net Change Profit (dynamic)' datatype='real' name='[If Profitable, Net Change Profit (or) (copy)_5550686562595930145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='If [Calculation_5550686561957187603] =TRUE&#10;THEN [Calculation_5550686557674790930]&#10;END' />
      </column>
      <column caption='Long-term Annual Rev (No Conversion)  (or)' datatype='real' name='[Long-term Annual Rev (No Conversion)  (copy)_5550686561978609684]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[current_monthly_rent]*12*0.973' />
      </column>
      <column caption='Net Cash Flow Change Conversion Year (or)' datatype='real' name='[Net Cash Flow Change Conversion Year (copy)_5550686562593243166]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ST Annual Rev After Transaction Fees (copy)_5550686561980047383]&#10;-[Long-term Annual Rev (No Conversion)  (copy)_5550686561978609684]&#10;+[New Cash Out (Conversion Year) (copy)_5550686561979224085]' />
      </column>
      <column caption='Net Change In Cash Flow Each Year After Conversion  (or)' datatype='real' name='[Net Change In Cash Flow Each Year After Conversion  (copy)_5550686562592415773]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ST Annual Rev After Transaction Fees (copy)_5550686561980047383]&#10;-[Long-term Annual Rev (No Conversion)  (copy)_5550686561978609684]&#10;+[New Cash Out (each year thereafter) (copy)_5550686562588536858]' />
      </column>
      <column caption='Net Change in Profits Conversion Year (or)' datatype='real' name='[Net Change in Profits Conversion Year (copy)_5550686562592157724]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ST Annual Rev After Transaction Fees (copy)_5550686561980047383]&#10;-[Long-term Annual Rev (No Conversion)  (copy)_5550686561978609684]&#10;+[New Change in Profits, Conversion Year (copy)_5550686561980330008]' />
      </column>
      <column caption='Net Change in Profits Each Year  After Conversion  (or)' datatype='real' name='[Net Change in Profits Each Year  After Conversion  (copy)_5550686562591715355]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[ST Annual Rev After Transaction Fees (copy)_5550686561980047383]&#10;-[Long-term Annual Rev (No Conversion)  (copy)_5550686561978609684]&#10;+[New Change in Profit (After Conversion) (copy)_5550686561980678169]' />
      </column>
      <column caption='New Cash Out (Conversion Year) (or)' datatype='real' name='[New Cash Out (Conversion Year) (copy)_5550686561979224085]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-30000-300*12-[Variable Costs - Conversion Year &amp; After (copy)_5550686561979695126]' />
      </column>
      <column caption='New Cash Out (each year thereafter) (or)' datatype='real' name='[New Cash Out (each year thereafter) (copy)_5550686562588536858]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-300*12 -[Variable Costs - Conversion Year &amp; After (copy)_5550686561979695126]-6000' />
      </column>
      <column caption='New Change in Profit (After Conversion) (or)' datatype='real' name='[New Change in Profit (After Conversion) (copy)_5550686561980678169]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-30000/5&#10;-300*12-[Variable Costs - Conversion Year &amp; After (copy)_5550686561979695126]&#10;-6000' />
      </column>
      <column caption='New Change in Profits, Conversion Year (or)' datatype='real' name='[New Change in Profits, Conversion Year (copy)_5550686561980330008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-30000/5&#10;-300*12-[Variable Costs - Conversion Year &amp; After (copy)_5550686561979695126]' />
      </column>
      <column caption='Profitable (or) ?  ' datatype='boolean' name='[Profitable (dynamic) ? (copy)_5550686562595119135]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Net Change in Profits Each Year  After Conversion  (copy)_5550686562591715355]&gt;[Parameters].[Parameter 2]' />
      </column>
      <column caption='ST Annual Rev After Transaction Fees (or)' datatype='real' name='[ST Annual Rev After Transaction Fees (copy)_5550686561980047383]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5550686557664280590]*[Calculation_5550686556673208323]*365*(1-0.3)' />
      </column>
      <column caption='Variable Costs - Conversion Year &amp; After (or)' datatype='real' name='[Variable Costs - Conversion Year &amp; After (copy)_5550686561979695126]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_5550686556673208323]*(365/3)*100' />
      </column>
      <column aggregation='CountD' caption='Ws Property Id (copy)' datatype='string' default-role='measure' default-type='quantitative' name='[Ws Property Id (copy)_3395784501255061515]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[ws_property_id]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Watershed properties and comparable short-term rental info.csv' datatype='table' name='[__tableau_internal_object_id__].[Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956]' role='measure' type='quantitative' />
      <column caption='Apt House' datatype='string' name='[apt_house]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Comp St 10Th Pctl Rent' datatype='integer' name='[comp_st_10th_pctl_rent]' role='measure' type='quantitative' />
      <column caption='Comp St 90Th Pctl Rent' datatype='integer' name='[comp_st_90th_pctl_rent]' role='measure' type='quantitative' />
      <column caption='Current Monthly Rent' datatype='integer' name='[current_monthly_rent]' role='measure' type='quantitative' />
      <column caption='Kitchen' datatype='string' name='[kitchen]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Num Bedrooms' datatype='integer' name='[num_bedrooms]' role='dimension' type='ordinal' />
      <column caption='Occ Days As St' datatype='integer' name='[occ_days_as_st]' role='measure' type='quantitative' />
      <column caption='Occ Rate As St' datatype='real' name='[occ_rate_as_st]' role='measure' type='quantitative' />
      <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      <column caption='Sample Nightly Rent Price' datatype='integer' name='[sample_nightly_rent_price]' role='measure' type='quantitative' />
      <column caption='Shared' datatype='string' name='[shared]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Ws Property Id' datatype='string' name='[ws_property_id]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[zipcode]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[Calculation_5550686557674639377]' derivation='Attribute' name='[attr:Calculation_5550686557674639377:qk]' pivot='key' type='quantitative' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[ws_property_id]' derivation='None' name='[none:ws_property_id:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_5550686557334196230]' derivation='Sum' name='[sum:Calculation_5550686557334196230:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5550686557337628680]' derivation='Sum' name='[sum:Calculation_5550686557337628680:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5550686557670608911]' derivation='Sum' name='[sum:Calculation_5550686557670608911:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5550686557672321040]' derivation='Sum' name='[sum:Calculation_5550686557672321040:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5550686557674639377]' derivation='Sum' name='[sum:Calculation_5550686557674639377:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5550686557674790930]' derivation='Sum' name='[sum:Calculation_5550686557674790930:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5550686562595549216]' derivation='Sum' name='[sum:Calculation_5550686562595549216:qk]' pivot='key' type='quantitative' />
      <column-instance column='[If Profitable, Net Change Profit (or) (copy)_5550686562595930145]' derivation='Sum' name='[sum:If Profitable, Net Change Profit (or) (copy)_5550686562595930145:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Cash Flow Change Conversion Year (copy)_5550686562593243166]' derivation='Sum' name='[sum:Net Cash Flow Change Conversion Year (copy)_5550686562593243166:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Change In Cash Flow Each Year After Conversion  (copy)_5550686562592415773]' derivation='Sum' name='[sum:Net Change In Cash Flow Each Year After Conversion  (copy)_5550686562592415773:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Change in Profits Conversion Year (copy)_5550686562592157724]' derivation='Sum' name='[sum:Net Change in Profits Conversion Year (copy)_5550686562592157724:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Net Change in Profits Each Year  After Conversion  (copy)_5550686562591715355]' derivation='Sum' name='[sum:Net Change in Profits Each Year  After Conversion  (copy)_5550686562591715355:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ST Annual Rev After Transaction Fees (copy)_5550686561980047383]' derivation='Sum' name='[sum:ST Annual Rev After Transaction Fees (copy)_5550686561980047383:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Variable Costs - Conversion Year &amp; After (copy)_5550686561979695126]' derivation='Sum' name='[sum:Variable Costs - Conversion Year &amp; After (copy)_5550686561979695126:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.808132' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.191868' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bentonville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ws_property_id:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;W114&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W199&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W163&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W28&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W46&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W108&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W192&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W54&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W120&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W168&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W115&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W110&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W130&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W198&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W159&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W194&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W123&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W164&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W66&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W156&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W111&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W143&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W144&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W179&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W152&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W118&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W157&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W160&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W196&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W109&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W116&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W103&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W112&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W188&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W47&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W67&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W155&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W119&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W107&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W190&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W50&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:If Profitable, Net Change Profit (or) (copy)_5550686562595930145:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Variable Costs - Conversion Year &amp; After (copy)_5550686561979695126:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557334196230:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674790930:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Net Change In Cash Flow Each Year After Conversion  (copy)_5550686562592415773:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Net Cash Flow Change Conversion Year (copy)_5550686562593243166:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[attr:Calculation_5550686557674639377:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674639377:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557337628680:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557672321040:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557670608911:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:ST Annual Rev After Transaction Fees (copy)_5550686561980047383:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686562595549216:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Net Change in Profits Conversion Year (copy)_5550686562592157724:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Net Change in Profits Each Year  After Conversion  (copy)_5550686562591715355:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Depreciation (Years)' datatype='integer' name='[Parameter 10]' param-domain-type='any' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
        </column>
        <column caption='Long-term Occupancy Rate' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.973'>
          <calculation class='tableau' formula='0.973' />
        </column>
        <column caption='Threshold to be Considered Profitable' datatype='integer' default-format='C1033%' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='6000'>
          <calculation class='tableau' formula='6000' />
        </column>
        <column caption='Capital Expenditure per Property' datatype='real' default-format='C1033%' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30000.0'>
          <calculation class='tableau' formula='30000.0' />
        </column>
        <column caption='Contracting Costs per Stay' datatype='real' default-format='C1033%' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='100.'>
          <calculation class='tableau' formula='100.' />
        </column>
        <column caption='Transaction Fee' datatype='real' default-format='p0.00%' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='0.3'>
          <calculation class='tableau' formula='0.3' />
        </column>
        <column caption='Average Rental Period(nights) ' datatype='integer' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='3'>
          <calculation class='tableau' formula='3' />
        </column>
        <column caption='Monthly Utilities ' datatype='real' default-format='C1033%' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='300.'>
          <calculation class='tableau' formula='300.' />
        </column>
        <column caption='Yearly Upkeep' datatype='real' default-format='C1033%' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='6000.'>
          <calculation class='tableau' formula='6000.' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Watershed properties and comparable short-term rental info.csv' id='Watershed properties and comparable short-term rental info.csv_27467B6E00A545E4B25B1643D92D8956'>
            <properties context=''>
              <relation connection='textscan.0piwk4l0m8fnan1glaq9j1xvj3el' name='Watershed properties and comparable short-term rental info.csv' table='[Watershed properties and comparable short-term rental info#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='ws_property_id' ordinal='0' />
                  <column datatype='string' name='property_type' ordinal='1' />
                  <column datatype='string' name='city' ordinal='2' />
                  <column datatype='string' name='state' ordinal='3' />
                  <column datatype='integer' name='zipcode' ordinal='4' />
                  <column datatype='string' name='apt_house' ordinal='5' />
                  <column datatype='string' name='kitchen' ordinal='6' />
                  <column datatype='integer' name='num_bedrooms' ordinal='7' />
                  <column datatype='string' name='shared' ordinal='8' />
                  <column datatype='integer' name='current_monthly_rent' ordinal='9' />
                  <column datatype='integer' name='comp_st_10th_pctl_rent' ordinal='10' />
                  <column datatype='integer' name='comp_st_90th_pctl_rent' ordinal='11' />
                  <column datatype='integer' name='sample_nightly_rent_price' ordinal='12' />
                  <column datatype='integer' name='occ_days_as_st' ordinal='13' />
                  <column datatype='real' name='occ_rate_as_st' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg Nightly Rental Prices for Apartments vs Houses, by City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Watershed properties and comparable short-term rental info' name='federated.1ear5ut0yhw1ya19345jh0uemtqr' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Depreciation (Years)' datatype='integer' name='[Parameter 10]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='Long-term Occupancy Rate' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.973'>
              <calculation class='tableau' formula='0.973' />
            </column>
            <column caption='Threshold to be Considered Profitable' datatype='integer' default-format='C1033%' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='6000'>
              <calculation class='tableau' formula='6000' />
            </column>
            <column caption='Capital Expenditure per Property' datatype='real' default-format='C1033%' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30000.0'>
              <calculation class='tableau' formula='30000.0' />
            </column>
            <column caption='Contracting Costs per Stay' datatype='real' default-format='C1033%' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='100.'>
              <calculation class='tableau' formula='100.' />
            </column>
            <column caption='Transaction Fee' datatype='real' default-format='p0.00%' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='0.3'>
              <calculation class='tableau' formula='0.3' />
            </column>
            <column caption='Average Rental Period(nights) ' datatype='integer' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
            </column>
            <column caption='Monthly Utilities ' datatype='real' default-format='C1033%' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='300.'>
              <calculation class='tableau' formula='300.' />
            </column>
            <column caption='Yearly Upkeep' datatype='real' default-format='C1033%' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='6000.'>
              <calculation class='tableau' formula='6000.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ear5ut0yhw1ya19345jh0uemtqr'>
            <column caption='Long-term Annual Rev (No Conversion) ' datatype='real' name='[Calculation_5550686556668563456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[current_monthly_rent]*12*[Parameters].[Parameter 1]' />
            </column>
            <column caption='Predicted Occupany Rate ' datatype='real' name='[Calculation_5550686556673208323]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-0.7917*[Calculation_5550686557657669645]+0.8507' />
            </column>
            <column caption='Optimal Rent' datatype='real' name='[Calculation_5550686556674646020]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(-0.7917*([comp_st_10th_pctl_rent]-([comp_st_90th_pctl_rent]&#10;-[comp_st_10th_pctl_rent])/8)/(1.25*([comp_st_90th_pctl_rent]&#10;-[comp_st_10th_pctl_rent]))-0.8507)*1.25*([comp_st_90th_pctl_rent]&#10;-[comp_st_10th_pctl_rent])/(2*(-0.7917))' />
            </column>
            <column caption='New Cash Out (Conversion Year)' datatype='real' name='[Calculation_5550686556676911109]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Parameters].[Parameter 3]-[Parameters].[Parameter 7]*12-[Calculation_5550686557334196230]' />
            </column>
            <column caption='Variable Costs - Conversion Year &amp; After' datatype='real' name='[Calculation_5550686557334196230]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5550686556673208323]*(365/[Parameters].[Parameter 6])*[Parameters].[Parameter 4]' />
            </column>
            <column caption='New Cash Out (each year thereafter)' datatype='real' name='[Calculation_5550686557337161735]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Parameters].[Parameter 7]*12 -[Calculation_5550686557334196230]-[Parameters].[Parameter 9]' />
            </column>
            <column caption='ST Annual Rev After Transaction Fees' datatype='real' name='[Calculation_5550686557337628680]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5550686557664280590]*[Calculation_5550686556673208323]*365*(1-[Parameters].[Parameter 5])' />
            </column>
            <column caption='New Change in Profits, Conversion Year' datatype='real' name='[Calculation_5550686557375729675]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Parameters].[Parameter 3]/[Parameters].[Parameter 10]&#10;-[Parameters].[Parameter 7]*12-[Calculation_5550686557334196230]' />
            </column>
            <column caption='New Change in Profit (After Conversion)' datatype='real' name='[Calculation_5550686557376335884]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Parameters].[Parameter 3]/[Parameters].[Parameter 10]&#10;-[Parameters].[Parameter 7]*12-[Calculation_5550686557334196230]&#10;-[Parameters].[Parameter 9]' />
            </column>
            <column caption='Correct Opt Rent Percentile ' datatype='real' name='[Calculation_5550686557657669645]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_5550686557664280590]-&#10;([comp_st_10th_pctl_rent]-([comp_st_90th_pctl_rent]&#10;-[comp_st_10th_pctl_rent])/8))/(1.25*([comp_st_90th_pctl_rent]-[comp_st_10th_pctl_rent]))' />
            </column>
            <column caption='Correct Opt Rent' datatype='real' name='[Calculation_5550686557664280590]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_5550686556674646020]&gt;[comp_st_10th_pctl_rent] THEN [Calculation_5550686556674646020]&#10;ELSE [comp_st_10th_pctl_rent] END' />
            </column>
            <column caption='Net Cash Flow Change Conversion Year' datatype='real' name='[Calculation_5550686557670608911]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5550686557337628680]-[Calculation_5550686556668563456]&#10;+[Calculation_5550686556676911109]' />
            </column>
            <column caption='Net Change In Cash Flow Each Year After Conversion ' datatype='real' name='[Calculation_5550686557672321040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5550686557337628680]-[Calculation_5550686556668563456]&#10;+[Calculation_5550686557337161735]' />
            </column>
            <column caption='Net Change in Profits Conversion Year' datatype='real' name='[Calculation_5550686557674639377]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5550686557337628680]-[Calculation_5550686556668563456]&#10;+[Calculation_5550686557375729675]' />
            </column>
            <column caption='Net Change in Profits Each Year  After Conversion ' datatype='real' name='[Calculation_5550686557674790930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5550686557337628680]-[Calculation_5550686556668563456]&#10;+[Calculation_5550686557376335884]' />
            </column>
            <column caption='Profitable (dynamic) ?' datatype='boolean' name='[Calculation_5550686561957187603]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_5550686557674790930]&gt;[Parameters].[Parameter 2]' />
            </column>
            <column caption='Comp St 10Th Pctl Rent' datatype='integer' name='[comp_st_10th_pctl_rent]' role='measure' type='quantitative' />
            <column caption='Comp St 90Th Pctl Rent' datatype='integer' name='[comp_st_90th_pctl_rent]' role='measure' type='quantitative' />
            <column caption='Current Monthly Rent' datatype='integer' name='[current_monthly_rent]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5550686561957187603]' derivation='None' name='[none:Calculation_5550686561957187603:nk]' pivot='key' type='nominal' />
            <column-instance column='[ws_property_id]' derivation='None' name='[none:ws_property_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5550686556668563456]' derivation='Sum' name='[sum:Calculation_5550686556668563456:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5550686556676911109]' derivation='Sum' name='[sum:Calculation_5550686556676911109:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5550686557337161735]' derivation='Sum' name='[sum:Calculation_5550686557337161735:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5550686557375729675]' derivation='Sum' name='[sum:Calculation_5550686557375729675:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5550686557376335884]' derivation='Sum' name='[sum:Calculation_5550686557376335884:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5550686557670608911]' derivation='Sum' name='[sum:Calculation_5550686557670608911:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5550686557672321040]' derivation='Sum' name='[sum:Calculation_5550686557672321040:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5550686557674639377]' derivation='Sum' name='[sum:Calculation_5550686557674639377:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5550686557674790930]' derivation='Sum' name='[sum:Calculation_5550686557674790930:qk]' pivot='key' type='quantitative' />
            <column caption='Ws Property Id' datatype='string' name='[ws_property_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557670608911:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557672321040:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674639377:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674790930:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557670608911:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686556676911109:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557337161735:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557376335884:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557375729675:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686556668563456:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:Calculation_5550686561957187603:nk]'>
            <groupfilter function='member' level='[none:Calculation_5550686561957187603:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:ws_property_id:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674790930:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]</column>
            <column>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:Calculation_5550686561957187603:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]' value='213' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:ws_property_id:nk]</rows>
        <cols>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{849CAF5D-A2F3-4964-9B92-97F032E4C7FB}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Net Change in Profits v. Cash Flow for Each Property, Conversion Year &amp; After</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Watershed properties and comparable short-term rental info' name='federated.1ear5ut0yhw1ya19345jh0uemtqr' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Depreciation (Years)' datatype='integer' name='[Parameter 10]' param-domain-type='any' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
            </column>
            <column caption='Long-term Occupancy Rate' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.973'>
              <calculation class='tableau' formula='0.973' />
            </column>
            <column caption='Threshold to be Considered Profitable' datatype='integer' default-format='C1033%' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='6000'>
              <calculation class='tableau' formula='6000' />
            </column>
            <column caption='Capital Expenditure per Property' datatype='real' default-format='C1033%' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='30000.0'>
              <calculation class='tableau' formula='30000.0' />
            </column>
            <column caption='Contracting Costs per Stay' datatype='real' default-format='C1033%' name='[Parameter 4]' param-domain-type='any' role='measure' type='quantitative' value='100.'>
              <calculation class='tableau' formula='100.' />
            </column>
            <column caption='Transaction Fee' datatype='real' default-format='p0.00%' name='[Parameter 5]' param-domain-type='any' role='measure' type='quantitative' value='0.3'>
              <calculation class='tableau' formula='0.3' />
            </column>
            <column caption='Average Rental Period(nights) ' datatype='integer' name='[Parameter 6]' param-domain-type='any' role='measure' type='quantitative' value='3'>
              <calculation class='tableau' formula='3' />
            </column>
            <column caption='Monthly Utilities ' datatype='real' default-format='C1033%' name='[Parameter 7]' param-domain-type='any' role='measure' type='quantitative' value='300.'>
              <calculation class='tableau' formula='300.' />
            </column>
            <column caption='Yearly Upkeep' datatype='real' default-format='C1033%' name='[Parameter 9]' param-domain-type='any' role='measure' type='quantitative' value='6000.'>
              <calculation class='tableau' formula='6000.' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1ear5ut0yhw1ya19345jh0uemtqr'>
            <column caption='Long-term Annual Rev (No Conversion) ' datatype='real' name='[Calculation_5550686556668563456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[current_monthly_rent]*12*[Parameters].[Parameter 1]' />
            </column>
            <column caption='Predicted Occupany Rate ' datatype='real' name='[Calculation_5550686556673208323]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-0.7917*[Calculation_5550686557657669645]+0.8507' />
            </column>
            <column caption='Optimal Rent' datatype='real' name='[Calculation_5550686556674646020]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(-0.7917*([comp_st_10th_pctl_rent]-([comp_st_90th_pctl_rent]&#10;-[comp_st_10th_pctl_rent])/8)/(1.25*([comp_st_90th_pctl_rent]&#10;-[comp_st_10th_pctl_rent]))-0.8507)*1.25*([comp_st_90th_pctl_rent]&#10;-[comp_st_10th_pctl_rent])/(2*(-0.7917))' />
            </column>
            <column caption='New Cash Out (Conversion Year)' datatype='real' name='[Calculation_5550686556676911109]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Parameters].[Parameter 3]-[Parameters].[Parameter 7]*12-[Calculation_5550686557334196230]' />
            </column>
            <column caption='Variable Costs - Conversion Year &amp; After' datatype='real' name='[Calculation_5550686557334196230]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5550686556673208323]*(365/[Parameters].[Parameter 6])*[Parameters].[Parameter 4]' />
            </column>
            <column caption='New Cash Out (each year thereafter)' datatype='real' name='[Calculation_5550686557337161735]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Parameters].[Parameter 7]*12 -[Calculation_5550686557334196230]-[Parameters].[Parameter 9]' />
            </column>
            <column caption='ST Annual Rev After Transaction Fees' datatype='real' name='[Calculation_5550686557337628680]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5550686557664280590]*[Calculation_5550686556673208323]*365*(1-[Parameters].[Parameter 5])' />
            </column>
            <column caption='New Change in Profits, Conversion Year' datatype='real' name='[Calculation_5550686557375729675]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Parameters].[Parameter 3]/[Parameters].[Parameter 10]&#10;-[Parameters].[Parameter 7]*12-[Calculation_5550686557334196230]' />
            </column>
            <column caption='New Change in Profit (After Conversion)' datatype='real' name='[Calculation_5550686557376335884]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Parameters].[Parameter 3]/[Parameters].[Parameter 10]&#10;-[Parameters].[Parameter 7]*12-[Calculation_5550686557334196230]&#10;-[Parameters].[Parameter 9]' />
            </column>
            <column caption='Correct Opt Rent Percentile ' datatype='real' name='[Calculation_5550686557657669645]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_5550686557664280590]-&#10;([comp_st_10th_pctl_rent]-([comp_st_90th_pctl_rent]&#10;-[comp_st_10th_pctl_rent])/8))/(1.25*([comp_st_90th_pctl_rent]-[comp_st_10th_pctl_rent]))' />
            </column>
            <column caption='Correct Opt Rent' datatype='real' name='[Calculation_5550686557664280590]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Calculation_5550686556674646020]&gt;[comp_st_10th_pctl_rent] THEN [Calculation_5550686556674646020]&#10;ELSE [comp_st_10th_pctl_rent] END' />
            </column>
            <column caption='Net Cash Flow Change Conversion Year' datatype='real' name='[Calculation_5550686557670608911]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5550686557337628680]-[Calculation_5550686556668563456]&#10;+[Calculation_5550686556676911109]' />
            </column>
            <column caption='Net Change In Cash Flow Each Year After Conversion ' datatype='real' name='[Calculation_5550686557672321040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5550686557337628680]-[Calculation_5550686556668563456]&#10;+[Calculation_5550686557337161735]' />
            </column>
            <column caption='Net Change in Profits Conversion Year' datatype='real' name='[Calculation_5550686557674639377]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5550686557337628680]-[Calculation_5550686556668563456]&#10;+[Calculation_5550686557375729675]' />
            </column>
            <column caption='Net Change in Profits Each Year  After Conversion ' datatype='real' name='[Calculation_5550686557674790930]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_5550686557337628680]-[Calculation_5550686556668563456]&#10;+[Calculation_5550686557376335884]' />
            </column>
            <column caption='Profitable (dynamic) ?' datatype='boolean' name='[Calculation_5550686561957187603]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_5550686557674790930]&gt;[Parameters].[Parameter 2]' />
            </column>
            <column caption='Comp St 10Th Pctl Rent' datatype='integer' name='[comp_st_10th_pctl_rent]' role='measure' type='quantitative' />
            <column caption='Comp St 90Th Pctl Rent' datatype='integer' name='[comp_st_90th_pctl_rent]' role='measure' type='quantitative' />
            <column caption='Current Monthly Rent' datatype='integer' name='[current_monthly_rent]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_5550686561957187603]' derivation='None' name='[none:Calculation_5550686561957187603:nk]' pivot='key' type='nominal' />
            <column-instance column='[ws_property_id]' derivation='None' name='[none:ws_property_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5550686557670608911]' derivation='Sum' name='[sum:Calculation_5550686557670608911:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5550686557672321040]' derivation='Sum' name='[sum:Calculation_5550686557672321040:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5550686557674639377]' derivation='Sum' name='[sum:Calculation_5550686557674639377:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5550686557674790930]' derivation='Sum' name='[sum:Calculation_5550686557674790930:qk]' pivot='key' type='quantitative' />
            <column caption='Ws Property Id' datatype='string' name='[ws_property_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557670608911:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557672321040:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674639377:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674790930:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:Calculation_5550686561957187603:nk]'>
            <groupfilter function='member' level='[none:Calculation_5550686561957187603:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:ws_property_id:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674639377:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:Calculation_5550686561957187603:nk]</column>
            <column>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674790930:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' field='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557672321040:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674790930:qk]' palette='orange_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' field='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557670608911:qk]' palette='gray_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557672321040:qk]' palette='purple_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674639377:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a7acad' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674790930:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.65867406129837036' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557672321040:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.61469614505767822' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557670608911:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a7acad' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674639377:qk] + ([federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674790930:qk] + ([federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557670608911:qk] + [federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557672321040:qk])))</rows>
        <cols>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:ws_property_id:nk]</cols>
      </table>
      <simple-id uuid='{E2915702-B4C5-464E-8724-0E45543248D4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='Sheet 3' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='203' h='12250' id='8' is-fixed='true' name='Sheet 3' pane-specification-id='5' param='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]' type-v2='color' w='32100' x='59800' y='9625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='12' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='11' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Sheet 3' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='203' h='12250' id='8' name='Sheet 3' pane-specification-id='5' param='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]' type-v2='color' w='32100' x='59800' y='9625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0C800886-5181-4D31-807F-0FBC4E3C8B03}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card mode='type_in' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:Calculation_5550686561957187603:nk]</field>
            <field>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:Ws Property Id (copy)_3395784501255061515:nk]</field>
            <field>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:apt_house:nk]</field>
            <field>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:city:nk]</field>
            <field>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:num_bedrooms:ok]</field>
            <field>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:property_type:nk]</field>
            <field>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:shared:nk]</field>
            <field>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:ws_property_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1CEE0238-0289-448F-8E20-BED793EDF690}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.1ear5ut0yhw1ya19345jh0uemtqr].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:Calculation_5550686557674790930:qk]</field>
            <field>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:Calculation_5550686561957187603:nk]</field>
            <field>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[none:ws_property_id:nk]</field>
            <field>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557672321040:qk]</field>
            <field>[federated.1ear5ut0yhw1ya19345jh0uemtqr].[sum:Calculation_5550686557674639377:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6AEC248E-204C-45BE-8310-8BE4A7199694}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{038DF94A-189F-415F-A914-D838ED00C35E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 1' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydZ3hb12G/XxAESIIDBPfepChukRqkhrUt2XIiJ5IdW7EVO26TOE2bpmnT
      /xO3T52kT9qkH5o6dhzbkWtJtqZlWXtLkaxFkRSXRHGJJLg3AC4MYvw/6OEtIVJyEhFaPO8X
      G7qHF+fcA9xxcH7nlTkcDgcCgUAgmHa4PegKCAQCgeDBIC4AAoFAME0RFwCBQCCYpogLgEAg
      EExTxAVAIBAIpinT9gJgsVjuul2v1zM0NHTH7aOjo3R1df1Z72m327FarZhMJvr6+v6sv70b
      DoeD0dHRKdvfGENDQ9jt9inf75+C1WrFbrczNDSEXq+/r+95t+1f1uddXV1T3hf38xj8JYyO
      juJwOOju7v7S79Wfwli/38sERZvNRl1dHTqdjpGRkS8t78rvkM1mm/L9/rmMfbZvP6/J33zz
      zTcfXLWmhiVLlpCXl0d7ezuXL19m5syZ0rbm5mYuXrxIcnIyACMjI/zkJz+hvLwcd3d3oqOj
      J93nqVOnGBwcdNq+detWNm/ezJUrV0hNTWXXrl3MmzfvT6pjaWkp//mf/8nVq1dRq9UUFhaS
      lZV1D62+RVtbG2+88QaVlZVEREQQEBBwz/sc49ixY8TExKBQKO5pP2+//TZHjhxh7ty5/M//
      /A+zZ89GLpdL2z///HM0Gg0+Pj44HA527NjBjh07aGpqwmKx0NjYKPXfvbB9+3YsFgsRERFO
      /377e2ZmZjrVb4y+vj62b99Ofn6+9G8tLS385Cc/oaysDE9PT44ePUpycjLe3t5fWp/y8nLe
      eOMNKioqcHNzIzY2dtJyJSUl1NfXS8fAbrfz1ltv4e3tTUNDA1988QWZmZl/zqG4I//wD/9A
      Z2cnoaGhfPzxx8yZM0faZrfb2bZtG0lJSSgUCkZHR/nd737HkSNH6OnpoaysjIiICNRq9T3V
      wWQyce7cOeLi4ib0Q3l5OT/96U+5ePEiJpOJGTNmTLqPs2fPcvbsWUJDQ2lsbGRwcJC6ujpi
      YmImlO3o6OAXv/gFRUVFBAQEEBoaek/1H8/p06cJDQ3F09PzjmWMRiO/+tWvSE5O5uTJk3R0
      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
      JfYCEgRBsFPi5b4gCIKdeuYTQEdHB5Ik8ejRI4aGhjCbzfT09GC1WmlubsZoNAIgSRK1tbVM
      TU0B83ckqFQq269eWDXj4+OkpKTQ0tICwMjICLdv36azsxOA0tJS0tPTxWaCNmSxWCgoKCAn
      J0cuemm1Wtrb2+VjzGYz2dnZFBUVIUkSc3NzpKenU1ZWBsx/TycnJzM2NrYm52AvBgYGSElJ
      oa+vT36suLiYxW+4dHV1cefOHYaGhoCl12b5dbOVF24Cw/y9x//2b/8m58uuXLnC//zP/9h0
      4cLqun79OomJieTn5zM7O8u1a9c4e/Ysvr6+5Ofn4+rqSkJCwlovc11b3vuVJImUlJQl94qn
      pKSwc+dOJEmiurp6STf4aW1aYeUt7v0CVFVVkZycvOSYtLQ0kpKSuHXr1mPX5km9Z1t4bBJ4
      sbGxMSYnJxkYGMBsNsvTvgcOHGBsbIwdO3bg6enJF198IQfC9Xo9/f39mEwmXn/9dZsuXlg9
      o6OjPHjwgJmZGXbv3k1OTg5DQ0O4ubnJzdPW1lZiY2PFXkA2EhQUhLu7O+np6Zw8eZKHDx9y
      9OhRent7iYuLA+Yngf/85z+jVqs5d+4cmZmZTExMMDIyglarRafT0dLSwpYtW/Dy8lrjM1q/
      tm7dSn19PWazmejoaPLy8ggLCyMuLk6+rVOpVKJSqeSh2cXXZmGCe2F62Fae+RvA3r17qays
      xNPTU970bffu3UsmgfPz8zEajbS3t6NSqfjDH/4gbxq3+FdT4eXW29vLp59+SkREBAaDgQMH
      DvDDH/6Q6upqFAoF77//PgcOHFgSKBdWll6v57e//S0/+tGP8Pb2pri4mIqKClQqlfyWTmVl
      JZ988gkXL16ktraWqKgovv/97zM6OorFYuHcuXN8+OGH3Lt3b43PZn1LSUlhcnKSd999l9TU
      VCRJQqVSyXtsmUwmXFxc+OSTTxgdHcXFxWXJtVl83WZmZmy2zmc+ASw0gWNiYoiMjKSzs/Ox
      JnBERAQXL17E19cXPz8/fvzjHxMXF4dCocDb29tmCxdWl7u7O2lpafT29hISEoJWqyU1NRVP
      T09eeeUV/vCHP5Cfn8/WrVvXeqnr1uIm8ODgIP/8z//M9773Pfbt24eDgwNlZWUEBweTmZlJ
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 3' width='384'>
      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
      /weYbkYVgZ6aowAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
